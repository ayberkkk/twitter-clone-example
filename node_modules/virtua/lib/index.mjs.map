{"version":3,"file":"index.mjs","sources":["../src/src/core/utils.ts","../src/src/core/cache.ts","../src/src/core/store.ts","../src/src/react/useIsomorphicLayoutEffect.ts","../src/src/react/utils.ts","../src/src/react/useLatestRef.ts","../src/src/react/useSelector.ts","../src/src/core/environment.ts","../src/src/core/scroller.ts","../src/src/react/useStatic.ts","../src/src/core/resizer.ts","../src/src/react/Viewport.tsx","../src/src/react/ListItem.tsx","../src/src/react/VList.tsx","../src/src/react/VGrid.tsx","../src/src/react/WVList.tsx"],"sourcesContent":["export const min = Math.min;\nexport const max = Math.max;\nexport const abs = Math.abs;\nexport const now = Date.now;\nexport const values = Object.values;\nexport const isArray = Array.isArray;\nexport const timeout = setTimeout;\n\nexport const clamp = (\n  value: number,\n  minValue: number,\n  maxValue: number\n): number => min(maxValue, max(minValue, value));\n\nexport const exists = <T>(v: T): v is Exclude<T, null | undefined> => v != null;\n\nexport const median = (arr: number[]): number => {\n  const s = [...arr].sort((a, b) => a - b);\n  const mid = (arr.length / 2) | 0;\n  return s.length % 2 === 0 ? (s[mid - 1]! + s[mid]!) / 2 : s[mid]!;\n};\n\nexport const debounce = <T extends (...args: any[]) => void>(\n  fn: T,\n  ms: number\n) => {\n  let id: NodeJS.Timeout | undefined | null;\n\n  const cancel = () => {\n    if (exists(id)) {\n      clearTimeout(id);\n    }\n  };\n  const debouncedFn = () => {\n    cancel();\n    id = timeout(() => {\n      id = null;\n      fn();\n    }, ms);\n  };\n  debouncedFn._cancel = cancel;\n  return debouncedFn;\n};\n\nexport const throttle = <T extends (...args: any[]) => void>(\n  fn: T,\n  ms: number\n) => {\n  let time = now() - ms;\n  return (...args: Parameters<T>) => {\n    const n = now();\n    if (time + ms < n) {\n      time = n;\n      fn(...args);\n    }\n  };\n};\n\nexport const once = <F extends (...args: any[]) => any>(fn: F): F => {\n  let called: undefined | boolean;\n  let cache: ReturnType<F>;\n\n  return ((...args) => {\n    if (!called) {\n      called = true;\n      cache = fn(...args);\n    }\n    return cache;\n  }) as F;\n};\n\n// wrap for SSR\nexport const computeStyle = (e: HTMLElement) => getComputedStyle(e);\n\nexport const getStyleNumber = (v: string): number => {\n  if (v) {\n    return parseFloat(v);\n  } else {\n    return 0;\n  }\n};\n","import type { DeepReadonly, Writeable } from \"./types\";\nimport { clamp, max, median, min } from \"./utils\";\n\nexport const UNCACHED = -1;\n\nexport type Cache = DeepReadonly<{\n  _defaultItemSize: number;\n  _length: number;\n  _sizes: number[];\n  _computedOffsetIndex: number;\n  _offsets: number[];\n}>;\n\nexport const getItemSize = (cache: Cache, index: number): number => {\n  const size = cache._sizes[index]!;\n  return size === UNCACHED ? cache._defaultItemSize : size;\n};\n\nexport const setItemSize = (\n  cache: Writeable<Cache>,\n  index: number,\n  size: number\n): boolean => {\n  const isInitialMeasurement = cache._sizes[index] === UNCACHED;\n  cache._sizes[index] = size;\n  // mark as dirty\n  cache._computedOffsetIndex = min(index, cache._computedOffsetIndex);\n  return isInitialMeasurement;\n};\n\nexport const computeOffset = (\n  cache: Writeable<Cache>,\n  index: number\n): number => {\n  if (!cache._length) return 0;\n  if (cache._computedOffsetIndex >= index) {\n    return cache._offsets[index]!;\n  }\n\n  let i = cache._computedOffsetIndex;\n  let top = cache._offsets[i]!;\n  while (i < index) {\n    top += getItemSize(cache, i);\n    cache._offsets[++i] = top;\n  }\n  // mark as measured\n  cache._computedOffsetIndex = index;\n  return top;\n};\n\nexport const computeTotalSize = (cache: Writeable<Cache>): number => {\n  if (!cache._length) return 0;\n  return (\n    computeOffset(cache, cache._length - 1) +\n    getItemSize(cache, cache._length - 1)\n  );\n};\n\nexport const findIndex = (\n  cache: Writeable<Cache>,\n  offset: number,\n  i: number\n): number => {\n  let sum = computeOffset(cache, i);\n  while (i >= 0 && i < cache._length) {\n    if (sum <= offset) {\n      const next = getItemSize(cache, i);\n      if (sum + next > offset) {\n        break;\n      } else {\n        sum += next;\n        i++;\n      }\n    } else {\n      sum -= getItemSize(cache, --i);\n    }\n  }\n  return clamp(i, 0, cache._length - 1);\n};\n\nexport const computeRange = (\n  cache: Writeable<Cache>,\n  scrollOffset: number,\n  prevStartIndex: number,\n  viewportSize: number\n): [number, number] => {\n  const start = findIndex(\n    cache,\n    scrollOffset,\n    // Clamp because prevStartIndex may exceed the limit when children decreased a lot after scrolling\n    min(prevStartIndex, cache._length - 1)\n  );\n  return [start, findIndex(cache, scrollOffset + viewportSize, start)];\n};\n\nexport const hasUnmeasuredItemsInRange = (\n  cache: Cache,\n  startIndex: number,\n  endIndex: number\n): boolean => {\n  return cache._sizes\n    .slice(max(0, startIndex - 1), min(cache._length - 1, endIndex + 1) + 1)\n    .includes(UNCACHED);\n};\n\nexport const estimateDefaultItemSize = (cache: Writeable<Cache>) => {\n  const measuredSizes = cache._sizes.filter((s) => s !== UNCACHED);\n  // This function will be called after measurement so measured size array must be longer than 0\n  const startItemSize = measuredSizes[0]!;\n\n  cache._defaultItemSize = measuredSizes.every((s) => s === startItemSize)\n    ? // Maybe a fixed size array\n      startItemSize\n    : // Maybe a variable size array\n      median(measuredSizes);\n};\n\nconst appendCache = (\n  cache: Writeable<Cache>,\n  length: number,\n  prepend?: boolean\n) => {\n  const key = prepend ? \"unshift\" : \"push\";\n  for (let i = cache._length; i < length; i++) {\n    cache._sizes[key](UNCACHED);\n    // first offset must be 0\n    cache._offsets.push(i === 0 ? 0 : UNCACHED);\n  }\n  cache._length = length;\n};\n\nexport const initCache = (length: number, itemSize: number): Cache => {\n  const cache: Cache = {\n    _defaultItemSize: itemSize,\n    _length: 0,\n    _computedOffsetIndex: 0,\n    _sizes: [],\n    _offsets: [],\n  };\n  appendCache(cache as Writeable<Cache>, length);\n  return cache;\n};\n\nexport const updateCacheLength = (\n  cache: Writeable<Cache>,\n  length: number,\n  isShift?: boolean\n): [number, boolean] => {\n  const diff = length - cache._length;\n\n  const isRemove = diff < 0;\n  let shift: number;\n  if (isRemove) {\n    // Removed\n    shift = (\n      isShift ? cache._sizes.splice(0, -diff) : cache._sizes.splice(diff)\n    ).reduce(\n      (acc, removed) =>\n        acc + (removed === UNCACHED ? cache._defaultItemSize : removed),\n      0\n    );\n    cache._offsets.splice(diff);\n  } else {\n    // Added\n    shift = cache._defaultItemSize * diff;\n    appendCache(cache, cache._length + diff, isShift);\n  }\n\n  cache._computedOffsetIndex = isShift\n    ? // Discard cache for now\n      0\n    : // measuredOffsetIndex shouldn't be less than 0 because it makes scrollSize NaN and cause infinite rerender.\n      // https://github.com/inokawa/virtua/pull/160\n      clamp(length - 1, 0, cache._computedOffsetIndex);\n  cache._length = length;\n  return [shift, isRemove];\n};\n","import {\n  initCache,\n  getItemSize,\n  computeTotalSize,\n  computeOffset as computeStartOffset,\n  Cache,\n  UNCACHED,\n  setItemSize,\n  hasUnmeasuredItemsInRange,\n  estimateDefaultItemSize,\n  updateCacheLength,\n  computeRange,\n} from \"./cache\";\nimport type { CacheSnapshot, Writeable } from \"./types\";\nimport { abs, clamp, max, min } from \"./utils\";\n\nexport type ScrollJump = Readonly<number>;\nexport type ItemResize = Readonly<[index: number, size: number]>;\ntype ItemsRange = Readonly<[startIndex: number, endIndex: number]>;\n\nconst calculateJump = (\n  cache: Cache,\n  items: readonly ItemResize[],\n  keepEnd?: boolean\n): number => {\n  return items.reduce((acc, [index, size]) => {\n    const diff = size - getItemSize(cache, index);\n    if (!keepEnd || diff > 0) {\n      acc += diff;\n    }\n    return acc;\n  }, 0);\n};\n\n// Scroll offset and sizes can have sub-pixel value if window.devicePixelRatio has decimal value\nconst SUBPIXEL_THRESHOLD = 1.5; // 0.5 * 3\n\nexport const SCROLL_IDLE = 0;\nexport const SCROLL_DOWN = 1;\nexport const SCROLL_UP = 2;\nexport type ScrollDirection =\n  | typeof SCROLL_IDLE\n  | typeof SCROLL_DOWN\n  | typeof SCROLL_UP;\n\nexport const ACTION_ITEM_RESIZE = 1;\nexport const ACTION_VIEWPORT_RESIZE = 2;\nexport const ACTION_ITEMS_LENGTH_CHANGE = 3;\nexport const ACTION_SCROLL = 4;\nexport const ACTION_BEFORE_MANUAL_SCROLL = 5;\nexport const ACTION_SCROLL_END = 6;\nexport const ACTION_MANUAL_SCROLL = 7;\n\ntype Actions =\n  | [type: typeof ACTION_ITEM_RESIZE, entries: ItemResize[]]\n  | [type: typeof ACTION_VIEWPORT_RESIZE, size: number]\n  | [\n      type: typeof ACTION_ITEMS_LENGTH_CHANGE,\n      arg: [length: number, isShift?: boolean | undefined]\n    ]\n  | [type: typeof ACTION_SCROLL, offset: number]\n  | [type: typeof ACTION_BEFORE_MANUAL_SCROLL, offset: number]\n  | [type: typeof ACTION_SCROLL_END, dummy?: void]\n  | [type: typeof ACTION_MANUAL_SCROLL, dummy?: void];\n\ntype Subscriber = () => void;\n\nexport const UPDATE_SCROLL = 0b00001;\nexport const UPDATE_SIZE = 0b00010;\nexport const UPDATE_JUMP = 0b00100;\nexport const UPDATE_SCROLL_DIRECTION = 0b01000;\nexport const UPDATE_SCROLL_WITH_EVENT = 0b10000;\n\nexport type VirtualStore = {\n  _getCache(): CacheSnapshot;\n  _getRange(): ItemsRange;\n  _isUnmeasuredItem(index: number): boolean;\n  _hasUnmeasuredItemsInTargetViewport(offset: number): boolean;\n  _getItemOffset(index: number): number;\n  _getItemSize(index: number): number;\n  _getItemsLength(): number;\n  _getScrollOffset(): number;\n  _getScrollOffsetMax(): number;\n  _getScrollDirection(): ScrollDirection;\n  _getViewportSize(): number;\n  _getCorrectedScrollSize(): number;\n  _getJumpCount(): number;\n  _flushJump(): ScrollJump;\n  _subscribe(target: number, cb: Subscriber): () => void;\n  _update(...action: Actions): void;\n};\n\nexport const createVirtualStore = (\n  flushSync: (cb: () => void) => void,\n  elementsCount: number,\n  itemSize: number = 40,\n  initialItemCount: number = 0,\n  cache: Cache = initCache(elementsCount, itemSize),\n  isReverse?: boolean,\n  shouldAutoEstimateItemSize?: boolean\n): VirtualStore => {\n  let viewportSize = itemSize * max(initialItemCount - 1, 0);\n  let scrollOffset = 0;\n  let jumpCount = 0;\n  let jump: ScrollJump = 0;\n  let _scrollDirection: ScrollDirection = SCROLL_IDLE;\n  let _isShifting = false;\n  let _isManualScrolling = false;\n  let _resized = false;\n  let _prevRange: ItemsRange = [0, initialItemCount];\n\n  const subscribers = new Set<[number, Subscriber]>();\n  const getScrollSize = (): number =>\n    computeTotalSize(cache as Writeable<Cache>);\n  const getScrollOffsetMax = () => getScrollSize() - viewportSize;\n\n  const clampScrollOffset = (value: number): number => {\n    // Scroll offset may exceed min or max especially in Safari's elastic scrolling.\n    return clamp(value, 0, getScrollOffsetMax());\n  };\n  const updateScrollDirection = (dir: ScrollDirection): boolean => {\n    const prev = _scrollDirection;\n    _scrollDirection = dir;\n    // Return true if scrolling is just started or stopped\n    return _scrollDirection !== prev;\n  };\n\n  return {\n    _getCache() {\n      return JSON.parse(JSON.stringify(cache)) as unknown as CacheSnapshot;\n    },\n    _getRange() {\n      const [prevStartIndex, prevEndIndex] = _prevRange;\n      const [start, end] = computeRange(\n        cache as Writeable<Cache>,\n        scrollOffset,\n        prevStartIndex,\n        viewportSize\n      );\n      if (prevStartIndex === start && prevEndIndex === end) {\n        return _prevRange;\n      }\n      return (_prevRange = [start, end]);\n    },\n    _isUnmeasuredItem(index) {\n      return cache._sizes[index] === UNCACHED;\n    },\n    _hasUnmeasuredItemsInTargetViewport(offset) {\n      const [startIndex, endIndex] = computeRange(\n        cache as Writeable<Cache>,\n        offset,\n        _prevRange[0], // TODO binary search may be better here\n        viewportSize\n      );\n      return hasUnmeasuredItemsInRange(cache, startIndex, endIndex);\n    },\n    _getItemOffset(index) {\n      const offset = computeStartOffset(cache as Writeable<Cache>, index);\n      if (isReverse) {\n        return offset + max(0, viewportSize - getScrollSize());\n      }\n      return offset;\n    },\n    _getItemSize(index) {\n      return getItemSize(cache, index);\n    },\n    _getItemsLength() {\n      return cache._length;\n    },\n    _getScrollOffset() {\n      return scrollOffset;\n    },\n    _getScrollOffsetMax: getScrollOffsetMax,\n    _getScrollDirection() {\n      return _scrollDirection;\n    },\n    _getViewportSize() {\n      return viewportSize;\n    },\n    _getCorrectedScrollSize() {\n      return max(getScrollSize(), viewportSize);\n    },\n    _getJumpCount() {\n      return jumpCount;\n    },\n    _flushJump() {\n      const prevJump = jump;\n      jump = 0;\n      return prevJump;\n    },\n    _subscribe(target, cb) {\n      const sub: [number, Subscriber] = [target, cb];\n      subscribers.add(sub);\n      return () => {\n        subscribers.delete(sub);\n      };\n    },\n    _update(type, payload): void {\n      let shouldSync: boolean | undefined;\n      let mutated = 0;\n\n      switch (type) {\n        case ACTION_ITEM_RESIZE: {\n          const updated = payload.filter(\n            ([index, size]) => cache._sizes[index] !== size\n          );\n          // Skip if all items are cached and not updated\n          if (!updated.length) {\n            break;\n          }\n\n          // Calculate jump\n          let diff = 0;\n          if (_isShifting || _isManualScrolling) {\n            // Should maintain visible position under specific situations\n            const [startIndex] = _prevRange;\n\n            if (scrollOffset === 0) {\n              // Do nothing to stick to the start\n            } else if (\n              scrollOffset >\n              getScrollOffsetMax() - SUBPIXEL_THRESHOLD\n            ) {\n              // Keep end to stick to the end\n              diff = calculateJump(cache, updated, true);\n            } else {\n              // Keep start at mid\n              diff = calculateJump(\n                cache,\n                updated.filter(([index]) => index < startIndex)\n              );\n            }\n          } else if (_scrollDirection === SCROLL_UP) {\n            // We can assume jumps occurred on the upper outside during reverse scrolling\n            diff = calculateJump(cache, updated);\n          } else {\n            // Do nothing\n          }\n          if (diff) {\n            jump = diff;\n            jumpCount++;\n            mutated += UPDATE_JUMP;\n          }\n\n          // Update item sizes\n          let isNewItemMeasured = false;\n          updated.forEach(([index, size]) => {\n            if (setItemSize(cache as Writeable<Cache>, index, size)) {\n              isNewItemMeasured = true;\n            }\n          });\n\n          // Estimate initial item size from measured sizes\n          if (\n            shouldAutoEstimateItemSize &&\n            isNewItemMeasured &&\n            // TODO support reverse scroll also\n            !scrollOffset\n          ) {\n            estimateDefaultItemSize(cache as Writeable<Cache>);\n          }\n          mutated += UPDATE_SIZE;\n          _resized = shouldSync = true;\n          break;\n        }\n        case ACTION_VIEWPORT_RESIZE: {\n          if (viewportSize !== payload) {\n            viewportSize = payload;\n            mutated = UPDATE_SIZE;\n          }\n          break;\n        }\n        case ACTION_ITEMS_LENGTH_CHANGE: {\n          if (payload[1]) {\n            // Calc distance before updating cache\n            const distanceToEnd = getScrollOffsetMax() - scrollOffset;\n\n            const [shift, isRemove] = updateCacheLength(\n              cache as Writeable<Cache>,\n              payload[0],\n              true\n            );\n            const diff = isRemove ? -min(shift, distanceToEnd) : shift;\n            jump += diff;\n            scrollOffset = clampScrollOffset(scrollOffset + diff);\n            jumpCount++;\n\n            mutated = UPDATE_SCROLL + UPDATE_JUMP;\n            _isShifting = true;\n          } else {\n            updateCacheLength(cache as Writeable<Cache>, payload[0]);\n          }\n          break;\n        }\n        case ACTION_SCROLL:\n        case ACTION_BEFORE_MANUAL_SCROLL: {\n          // Skip if offset is not changed\n          if (scrollOffset === payload) {\n            break;\n          }\n\n          if (type === ACTION_SCROLL) {\n            const delta = payload - scrollOffset;\n            // Scrolling after resizing will be caused by jump compensation\n            const isJustResized = _resized;\n            _resized = false;\n\n            // Skip scroll direction detection just after resizing because it may result in the opposite direction.\n            // Scroll events are dispatched enough so it's ok to skip some of them.\n            if (\n              (_scrollDirection === SCROLL_IDLE || !isJustResized) &&\n              // Ignore until manual scrolling\n              !_isManualScrolling\n            ) {\n              if (updateScrollDirection(delta < 0 ? SCROLL_UP : SCROLL_DOWN)) {\n                mutated += UPDATE_SCROLL_DIRECTION;\n              }\n            }\n\n            // Ignore manual scroll because it may be called in useEffect/useLayoutEffect and cause the warn below.\n            // Warning: flushSync was called from inside a lifecycle method. React cannot flush when React is already rendering. Consider moving this call to a scheduler task or micro task.\n            //\n            // Update synchronously if scrolled a lot\n            shouldSync = abs(delta) > viewportSize;\n\n            mutated += UPDATE_SCROLL_WITH_EVENT;\n\n            if (!isJustResized) {\n              _isShifting = false;\n            }\n          }\n\n          scrollOffset = clampScrollOffset(payload);\n          mutated += UPDATE_SCROLL;\n          break;\n        }\n        case ACTION_SCROLL_END: {\n          if (updateScrollDirection(SCROLL_IDLE)) {\n            mutated = UPDATE_SCROLL_DIRECTION;\n          }\n          _isShifting = _isManualScrolling = false;\n          break;\n        }\n        case ACTION_MANUAL_SCROLL: {\n          _isManualScrolling = true;\n          break;\n        }\n      }\n\n      if (mutated) {\n        const update = () => {\n          subscribers.forEach(([target, cb]) => {\n            // Early return to skip React's computation\n            if (!(mutated & target)) {\n              return;\n            }\n            cb();\n          });\n        };\n        if (shouldSync) {\n          // https://github.com/facebook/react/issues/25191\n          // https://github.com/facebook/react/blob/a5fc797db14c6e05d4d5c4dbb22a0dd70d41f5d5/packages/react-reconciler/src/ReactFiberWorkLoop.js#L1443-L1447\n          flushSync(update);\n        } else {\n          update();\n        }\n      }\n    },\n  };\n};\n","import { useEffect, useLayoutEffect } from \"react\";\n\n// https://gist.github.com/gaearon/e7d97cdf38a2907924ea12e4ebdf3c85\nexport const useIsomorphicLayoutEffect =\n  typeof window !== \"undefined\" ? useLayoutEffect : useEffect;\n","import { ReactElement, ReactFragment, ReactNode } from \"react\";\nimport { exists, max, min, isArray } from \"../core/utils\";\nimport { SCROLL_DOWN, SCROLL_UP, ScrollDirection } from \"../core/store\";\n\nexport const refKey = \"current\";\n\nexport const emptyComponents = {};\n\ntype ItemElement = ReactElement | ReactFragment | string | number;\n\nconst forEach = (children: ReactNode, elements: ItemElement[]) => {\n  if (isArray(children)) {\n    for (const c of children) {\n      forEach(c, elements);\n    }\n  } else if (!exists(children) || typeof children === \"boolean\") {\n    // filter out, that is the same as React.Children.toArray\n  } else {\n    elements.push(children);\n  }\n};\n\n// Replace React.Children.forEach with our tiny implementation.\n// In our usage, just flatten children array keeping element instances and their keys, React.Children is redundant and slow.\n//\n// - React.Children.toArray is slow because it clones element instance.\n// - React.Children.map is slow because it clones element instance.\n// - React.Children.forEach is slow because it escapes and modifies keys even if they are unused.\n//\n// And React.Children seems to be in maintenance mode so it's unlikely it would be improved and ported to older versions.\n// https://github.com/reactjs/rfcs/pull/61#issuecomment-584402735\nexport const flattenChildren = (children: ReactNode): ItemElement[] => {\n  const elements: ItemElement[] = [];\n  forEach(children, elements);\n  return elements;\n};\n\nexport type MayHaveKey = { key?: React.Key };\n\nexport const clampStartIndex = (\n  startIndex: number,\n  overscan: number,\n  scrollDirection: ScrollDirection\n): number => {\n  return max(\n    startIndex - (scrollDirection === SCROLL_DOWN ? 1 : max(1, overscan)),\n    0\n  );\n};\n\nexport const clampEndIndex = (\n  endIndex: number,\n  overscan: number,\n  scrollDirection: ScrollDirection,\n  count: number\n): number => {\n  return min(\n    endIndex + (scrollDirection === SCROLL_UP ? 1 : max(1, overscan)),\n    count - 1\n  );\n};\n","import { useRef } from \"react\";\nimport { useIsomorphicLayoutEffect } from \"./useIsomorphicLayoutEffect\";\nimport { refKey } from \"./utils\";\n\nexport const useLatestRef = <T>(value: T) => {\n  const ref = useRef<T>(value);\n\n  useIsomorphicLayoutEffect(() => {\n    ref[refKey] = value;\n  }, [value]);\n\n  return ref;\n};\n","import { useState } from \"react\";\nimport { useLatestRef } from \"./useLatestRef\";\nimport { refKey } from \"./utils\";\nimport { VirtualStore } from \"../core/store\";\nimport { useIsomorphicLayoutEffect } from \"./useIsomorphicLayoutEffect\";\n\nexport const useSelector = <T>(\n  store: VirtualStore,\n  getSnapShot: () => T,\n  target: number,\n  shouldGetLatest?: boolean\n): T => {\n  const [state, setState] = useState(getSnapShot);\n  const getter = useLatestRef(getSnapShot);\n\n  useIsomorphicLayoutEffect(() => {\n    return store._subscribe(target, () => {\n      setState(() => getter[refKey]());\n    });\n  }, []);\n\n  // especially for sort of items\n  if (shouldGetLatest) {\n    const snap = getSnapShot();\n    if (state !== snap) {\n      setState(snap);\n    }\n  }\n  return state;\n};\n","import { once } from \"./utils\";\n\n// The scroll position may be negative value in rtl direction.\n//\n// left  right result\n// -100  0     true    spec compliant\n// 0     100   false   probably Chrome earlier than v85\n// https://github.com/othree/jquery.rtl-scroll-type\nexport const hasNegativeOffsetInRtl = /*#__PURE__*/ once(\n  (scrollable: HTMLElement) => {\n    const key = \"scrollLeft\";\n    const prev = scrollable[key];\n    scrollable[key] = 1;\n    // scrollLeft can be positive under some specific situations even if negative mode, so we use `<` for now.\n    const isNegative = scrollable[key] < 1;\n    scrollable[key] = prev;\n    return isNegative;\n  }\n);\n","import { hasNegativeOffsetInRtl } from \"./environment\";\nimport {\n  ACTION_SCROLL,\n  ACTION_BEFORE_MANUAL_SCROLL,\n  ScrollJump,\n  VirtualStore,\n  ACTION_SCROLL_END,\n  UPDATE_SIZE,\n  ACTION_MANUAL_SCROLL,\n  SCROLL_IDLE,\n} from \"./store\";\nimport { ScrollToIndexAlign } from \"./types\";\nimport { debounce, throttle, timeout, clamp } from \"./utils\";\n\n// Infer scroll state also from wheel events\n// Sometimes scroll events do not fire when frame dropped even if the visual have been already scrolled\nconst createOnWheel = (\n  store: VirtualStore,\n  isHorizontal: boolean,\n  onScrollStopped: () => void\n) => {\n  return throttle((e: WheelEvent) => {\n    if (store._getScrollDirection() === SCROLL_IDLE) {\n      // Scroll start should be detected with scroll event\n      return;\n    }\n    if (e.ctrlKey) {\n      // Probably a pinch-to-zoom gesture\n      return;\n    }\n    // Get delta before checking deltaMode for firefox behavior\n    // https://github.com/w3c/uievents/issues/181#issuecomment-392648065\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1392460#c34\n    if (isHorizontal ? e.deltaX : e.deltaY) {\n      const offset = store._getScrollOffset();\n      if (offset > 0 && offset < store._getScrollOffsetMax()) {\n        onScrollStopped();\n      }\n    }\n  }, 50);\n};\n\nexport type Scroller = {\n  _initRoot: (rootElement: HTMLElement) => () => void;\n  _scrollTo: (offset: number) => void;\n  _scrollBy: (offset: number) => void;\n  _scrollToIndex: (index: number, align?: ScrollToIndexAlign) => void;\n  _fixScrollJump: (jump: ScrollJump) => void;\n};\n\nexport const createScroller = (\n  store: VirtualStore,\n  isHorizontal: boolean,\n  isRtl: boolean\n): Scroller => {\n  let rootElement: HTMLElement | undefined;\n  let scrollToQueue: [() => void, () => void] | undefined;\n  const scrollToKey = isHorizontal ? \"scrollLeft\" : \"scrollTop\";\n\n  const normalizeOffset = (offset: number, diff?: boolean): number => {\n    if (isHorizontal && isRtl) {\n      if (hasNegativeOffsetInRtl(rootElement!)) {\n        return -offset;\n      } else {\n        return diff ? -offset : store._getScrollOffsetMax() - offset;\n      }\n    }\n    return offset;\n  };\n\n  const scrollManually = async (getOffset: () => number) => {\n    if (!rootElement) return;\n\n    const getTargetOffset = (): number => {\n      // Adjust if the offset is over the end, to get correct startIndex.\n      return clamp(getOffset(), 0, store._getScrollOffsetMax());\n    };\n\n    while (true) {\n      // Sync viewport to scroll destination\n      // In order to scroll to the correct position, mount the items and measure their sizes before scrolling.\n      const targetOffset = getTargetOffset();\n      store._update(ACTION_BEFORE_MANUAL_SCROLL, targetOffset);\n\n      if (!store._hasUnmeasuredItemsInTargetViewport(targetOffset)) {\n        break;\n      }\n\n      if (scrollToQueue) {\n        // Cancel waiting scrollTo\n        scrollToQueue[1]();\n      }\n\n      // Wait for the scroll destination items to be measured.\n      const unsubscribe = store._subscribe(UPDATE_SIZE, () => {\n        scrollToQueue && scrollToQueue[0]();\n      });\n      try {\n        // The measurement will be done asynchronously and the timing is not predictable so we use promise.\n        // For example, ResizeObserver may not fire when window is not visible.\n        await new Promise<void>((resolve, reject) => {\n          let resolved = false;\n\n          const resolveQueue = () => {\n            if (resolved) return;\n            resolved = true;\n            resolve();\n            scrollToQueue = undefined;\n          };\n          scrollToQueue = [resolveQueue, reject];\n\n          // In some specific situation with VGrid, the promise never resolved so we resolve it if timed out.\n          timeout(resolveQueue, 250);\n        });\n      } catch (e) {\n        // canceled\n        return;\n      } finally {\n        unsubscribe();\n      }\n    }\n\n    // Scroll with the updated value\n    rootElement[scrollToKey] = normalizeOffset(getTargetOffset());\n    store._update(ACTION_MANUAL_SCROLL);\n  };\n\n  return {\n    _initRoot(root) {\n      rootElement = root;\n\n      const syncViewportToScrollPosition = () => {\n        store._update(ACTION_SCROLL, normalizeOffset(root[scrollToKey]));\n      };\n\n      const onScrollStopped = debounce(() => {\n        // Check scroll position once just after scrolling stopped\n        syncViewportToScrollPosition();\n        store._update(ACTION_SCROLL_END);\n      }, 150);\n\n      const onScroll = () => {\n        syncViewportToScrollPosition();\n        onScrollStopped();\n      };\n\n      const onWheel = createOnWheel(store, isHorizontal, onScrollStopped);\n\n      root.addEventListener(\"scroll\", onScroll);\n      root.addEventListener(\"wheel\", onWheel, { passive: true });\n\n      return () => {\n        root.removeEventListener(\"scroll\", onScroll);\n        root.removeEventListener(\"wheel\", onWheel);\n        onScrollStopped._cancel();\n      };\n    },\n    _scrollTo(offset) {\n      scrollManually(() => offset);\n    },\n    _scrollBy(offset) {\n      offset += store._getScrollOffset();\n      scrollManually(() => offset);\n    },\n    _scrollToIndex(index, align) {\n      index = clamp(index, 0, store._getItemsLength() - 1);\n\n      scrollManually(\n        align === \"end\"\n          ? () =>\n              store._getItemOffset(index) +\n              store._getItemSize(index) -\n              store._getViewportSize()\n          : () => store._getItemOffset(index)\n      );\n    },\n    _fixScrollJump: (jump) => {\n      if (!rootElement) return;\n      rootElement[scrollToKey] += normalizeOffset(jump, true);\n    },\n  };\n};\n\nexport type WindowScroller = {\n  _initRoot: (rootElement: HTMLElement) => () => void;\n  _fixScrollJump: (jump: ScrollJump) => void;\n};\n\nexport const createWindowScroller = (\n  store: VirtualStore,\n  isHorizontal: boolean\n): WindowScroller => {\n  const scrollToKey = isHorizontal ? \"scrollX\" : \"scrollY\";\n  const offsetKey = isHorizontal ? \"offsetLeft\" : \"offsetTop\";\n\n  return {\n    _initRoot(rootElement) {\n      let visible = false;\n\n      const getOffsetToWindow = (node: HTMLElement, offset: number): number => {\n        const nodeOffset = offset + node[offsetKey];\n\n        const parent = node.offsetParent;\n        if (node === document.body || !parent) {\n          return nodeOffset;\n        }\n\n        return getOffsetToWindow(parent as HTMLElement, nodeOffset);\n      };\n\n      const syncViewportToScrollPosition = () => {\n        if (!visible) return;\n        store._update(\n          ACTION_SCROLL,\n          window[scrollToKey] - getOffsetToWindow(rootElement, 0)\n        );\n      };\n\n      const onScrollStopped = debounce(() => {\n        // Check scroll position once just after scrolling stopped\n        syncViewportToScrollPosition();\n        store._update(ACTION_SCROLL_END);\n      }, 150);\n\n      const onScroll = () => {\n        syncViewportToScrollPosition();\n        onScrollStopped();\n      };\n\n      const onWheel = createOnWheel(store, isHorizontal, onScrollStopped);\n\n      const io = new IntersectionObserver(([entry]) => {\n        visible = entry!.isIntersecting;\n      });\n      io.observe(rootElement);\n\n      window.addEventListener(\"scroll\", onScroll);\n      window.addEventListener(\"wheel\", onWheel, { passive: true });\n\n      return () => {\n        io.disconnect();\n        window.removeEventListener(\"scroll\", onScroll);\n        window.removeEventListener(\"wheel\", onWheel);\n        onScrollStopped._cancel();\n      };\n    },\n    _fixScrollJump: (jump) => {\n      // TODO support case two window scrollers exist in the same view\n      window.scrollBy(isHorizontal ? jump : 0, isHorizontal ? 0 : jump);\n    },\n  };\n};\n","import { useRef } from \"react\";\nimport { refKey } from \"./utils\";\n\nexport const useStatic = <T>(init: () => T): T => {\n  const ref = useRef<T>();\n  return ref[refKey] || (ref[refKey] = init());\n};\n","import {\n  ACTION_ITEM_RESIZE,\n  ACTION_VIEWPORT_RESIZE,\n  ItemResize,\n  VirtualStore,\n} from \"./store\";\nimport { exists, computeStyle, getStyleNumber, max, once } from \"./utils\";\n\nconst rootObserveOpts: ResizeObserverOptions = { box: \"border-box\" };\n\nexport interface ListResizer {\n  _observeRoot(root: HTMLElement): () => void;\n  _observeItem(el: HTMLElement, i: number): () => void;\n}\n\nexport const createResizer = (\n  store: VirtualStore,\n  isHorizontal: boolean\n): ListResizer => {\n  let rootElement: HTMLElement | undefined;\n  const sizeKey = isHorizontal ? \"width\" : \"height\";\n  const mountedIndexes = new WeakMap<Element, number>();\n\n  // Initialize ResizeObserver lazily for SSR\n  const getResizeObserver = once(() => {\n    // https://www.w3.org/TR/resize-observer/#intro\n    return new ResizeObserver((entries) => {\n      const resizes: ItemResize[] = [];\n      for (const { target, contentRect } of entries) {\n        // Skip zero-sized rects that may be observed under `display: none` style\n        if (!(target as HTMLElement).offsetParent) continue;\n\n        if (target === rootElement) {\n          store._update(\n            ACTION_VIEWPORT_RESIZE,\n            contentRect[sizeKey] +\n              contentRect[isHorizontal ? \"left\" : \"top\"] +\n              // contentRect doesn't have paddingRight/paddingBottom so get them from computed style\n              // https://www.w3.org/TR/resize-observer/#css-definitions\n              getStyleNumber(\n                computeStyle(rootElement)[\n                  isHorizontal ? \"paddingRight\" : \"paddingBottom\"\n                ]\n              )\n          );\n        } else {\n          const index = mountedIndexes.get(target);\n          if (exists(index)) {\n            resizes.push([index, contentRect[sizeKey]]);\n          }\n        }\n      }\n\n      if (resizes.length) {\n        store._update(ACTION_ITEM_RESIZE, resizes);\n      }\n    });\n  });\n\n  return {\n    _observeRoot(root: HTMLElement) {\n      rootElement = root;\n      const ro = getResizeObserver();\n      ro.observe(root, rootObserveOpts);\n      return () => {\n        ro.disconnect();\n      };\n    },\n    _observeItem(el: HTMLElement, i: number) {\n      const ro = getResizeObserver();\n      mountedIndexes.set(el, i);\n      ro.observe(el);\n      return () => {\n        mountedIndexes.delete(el);\n        ro.unobserve(el);\n      };\n    },\n  };\n};\n\nexport const createWindowResizer = (\n  store: VirtualStore,\n  isHorizontal: boolean\n): ListResizer => {\n  const sizeKey = isHorizontal ? \"width\" : \"height\";\n  const windowSizeKey = isHorizontal ? \"innerWidth\" : \"innerHeight\";\n  const mountedIndexes = new WeakMap<Element, number>();\n\n  // Initialize ResizeObserver lazily for SSR\n  const getResizeObserver = once(() => {\n    // https://www.w3.org/TR/resize-observer/#intro\n    return new ResizeObserver((entries) => {\n      const resizes: ItemResize[] = [];\n      for (const { target, contentRect } of entries) {\n        // Skip zero-sized rects that may be observed under `display: none` style\n        if (!(target as HTMLElement).offsetParent) continue;\n\n        const index = mountedIndexes.get(target);\n        if (exists(index)) {\n          resizes.push([index, contentRect[sizeKey]]);\n        }\n      }\n\n      if (resizes.length) {\n        store._update(ACTION_ITEM_RESIZE, resizes);\n      }\n    });\n  });\n\n  return {\n    _observeRoot() {\n      const cb = () => {\n        store._update(ACTION_VIEWPORT_RESIZE, window[windowSizeKey]);\n      };\n      window.addEventListener(\"resize\", cb);\n      cb();\n      return () => {\n        window.removeEventListener(\"resize\", cb);\n        getResizeObserver().disconnect();\n      };\n    },\n    _observeItem(el: HTMLElement, i: number) {\n      const ro = getResizeObserver();\n      mountedIndexes.set(el, i);\n      ro.observe(el);\n      return () => {\n        mountedIndexes.delete(el);\n        ro.unobserve(el);\n      };\n    },\n  };\n};\n\nexport const createGridResizer = (\n  vStore: VirtualStore,\n  hStore: VirtualStore\n) => {\n  let rootElement: HTMLElement | undefined;\n\n  const heightKey = \"height\";\n  const widthKey = \"width\";\n  const mountedIndexes = new WeakMap<\n    Element,\n    [rowIndex: number, colIndex: number]\n  >();\n\n  type CellSize = [height: number, width: number];\n  const maybeCachedRowIndexes = new Set<number>();\n  const maybeCachedColIndexes = new Set<number>();\n  const sizeCache = new Map<string, CellSize>();\n  const getKey = (rowIndex: number, colIndex: number): string =>\n    `${rowIndex}-${colIndex}`;\n\n  // Initialize ResizeObserver lazily for SSR\n  const getResizeObserver = once(() => {\n    // https://www.w3.org/TR/resize-observer/#intro\n    return new ResizeObserver((entries) => {\n      const resizedRows = new Set<number>();\n      const resizedCols = new Set<number>();\n      for (const { target, contentRect } of entries) {\n        // Skip zero-sized rects that may be observed under `display: none` style\n        if (!(target as HTMLElement).offsetParent) continue;\n\n        if (target === rootElement) {\n          // contentRect doesn't have paddingRight/paddingBottom so get them from computed style\n          // https://www.w3.org/TR/resize-observer/#css-definitions\n          // TODO subtract scroll bar width/height\n          // https://github.com/w3c/csswg-drafts/issues/3536\n          const style = computeStyle(rootElement);\n          vStore._update(\n            ACTION_VIEWPORT_RESIZE,\n            contentRect[heightKey] +\n              contentRect.top +\n              getStyleNumber(style.paddingBottom)\n          );\n          hStore._update(\n            ACTION_VIEWPORT_RESIZE,\n            contentRect[widthKey] +\n              contentRect.left +\n              getStyleNumber(style.paddingRight)\n          );\n        } else {\n          const cell = mountedIndexes.get(target);\n          if (cell) {\n            const [rowIndex, colIndex] = cell;\n            const key = getKey(rowIndex, colIndex);\n            const prevSize = sizeCache.get(key);\n            const size: CellSize = [\n              contentRect[heightKey],\n              contentRect[widthKey],\n            ];\n            let rowResized: boolean | undefined;\n            let colResized: boolean | undefined;\n            if (!prevSize) {\n              rowResized = colResized = true;\n            } else {\n              if (prevSize[0] !== size[0]) {\n                rowResized = true;\n              }\n              if (prevSize[1] !== size[1]) {\n                colResized = true;\n              }\n            }\n            if (rowResized) {\n              resizedRows.add(rowIndex);\n            }\n            if (colResized) {\n              resizedCols.add(colIndex);\n            }\n            if (rowResized || colResized) {\n              sizeCache.set(key, size);\n            }\n          }\n        }\n      }\n\n      if (resizedRows.size) {\n        const heightResizes: ItemResize[] = [];\n        resizedRows.forEach((rowIndex) => {\n          let maxHeight = 0;\n          maybeCachedColIndexes.forEach((colIndex) => {\n            const size = sizeCache.get(getKey(rowIndex, colIndex));\n            if (size) {\n              maxHeight = max(maxHeight, size[0]);\n            }\n          });\n          if (maxHeight) {\n            heightResizes.push([rowIndex, maxHeight]);\n          }\n        });\n        vStore._update(ACTION_ITEM_RESIZE, heightResizes);\n      }\n      if (resizedCols.size) {\n        const widthResizes: ItemResize[] = [];\n        resizedCols.forEach((colIndex) => {\n          let maxWidth = 0;\n          maybeCachedRowIndexes.forEach((rowIndex) => {\n            const size = sizeCache.get(getKey(rowIndex, colIndex));\n            if (size) {\n              maxWidth = max(maxWidth, size[1]);\n            }\n          });\n          if (maxWidth) {\n            widthResizes.push([colIndex, maxWidth]);\n          }\n        });\n        hStore._update(ACTION_ITEM_RESIZE, widthResizes);\n      }\n    });\n  });\n\n  return {\n    _observeRoot(root: HTMLElement) {\n      rootElement = root;\n      const ro = getResizeObserver();\n      ro.observe(root, rootObserveOpts);\n      return () => {\n        ro.disconnect();\n      };\n    },\n    _observeItem(el: HTMLElement, rowIndex: number, colIndex: number) {\n      const ro = getResizeObserver();\n      mountedIndexes.set(el, [rowIndex, colIndex]);\n      maybeCachedRowIndexes.add(rowIndex);\n      maybeCachedColIndexes.add(colIndex);\n      ro.observe(el);\n      return () => {\n        mountedIndexes.delete(el);\n        ro.unobserve(el);\n      };\n    },\n  };\n};\n\nexport type GridResizer = ReturnType<typeof createGridResizer>;\n","import {\n  CSSProperties,\n  ReactElement,\n  ReactNode,\n  forwardRef,\n  useMemo,\n} from \"react\";\n\nexport type ViewportComponentAttributes = Pick<\n  React.HTMLAttributes<HTMLElement>,\n  \"className\" | \"style\" | \"id\" | \"role\" | \"tabIndex\"\n> &\n  React.AriaAttributes;\n\n/**\n * Props of customized scrollable component.\n */\nexport interface CustomViewportComponentProps {\n  /**\n   * Renderable item elements.\n   */\n  children: ReactNode;\n  /**\n   * Attributes that should be passed to the scrollable element.\n   */\n  attrs: ViewportComponentAttributes;\n  /**\n   * Total height of items. It's undefined if component is not vertically scrollable.\n   */\n  height: number | undefined;\n  /**\n   * Total width of items. It's undefined if component is not horizontally scrollable.\n   */\n  width: number | undefined;\n  /**\n   * Currently component is scrolling or not.\n   */\n  scrolling: boolean;\n}\n\nexport const Viewport = forwardRef<any, CustomViewportComponentProps>(\n  ({ children, attrs, width, height, scrolling }, ref): ReactElement => {\n    return (\n      <div ref={ref} {...attrs}>\n        <div\n          style={useMemo((): CSSProperties => {\n            return {\n              position: \"relative\",\n              visibility: \"hidden\",\n              width: width ?? \"100%\",\n              height: height ?? \"100%\",\n              pointerEvents: scrolling ? \"none\" : \"auto\",\n            };\n          }, [width, height, scrolling])}\n        >\n          {children}\n        </div>\n      </div>\n    );\n  }\n);\n\nexport type CustomViewportComponent = typeof Viewport;\n","import {\n  memo,\n  useRef,\n  useMemo,\n  CSSProperties,\n  ReactElement,\n  ReactNode,\n} from \"react\";\nimport { UPDATE_SIZE, VirtualStore } from \"../core/store\";\nimport { useIsomorphicLayoutEffect } from \"./useIsomorphicLayoutEffect\";\nimport { useSelector } from \"./useSelector\";\nimport { ListResizer } from \"../core/resizer\";\nimport { refKey } from \"./utils\";\n\n/**\n * Props of customized item component for {@link VList}.\n */\nexport interface CustomItemComponentProps {\n  style: CSSProperties;\n  children: ReactNode;\n}\n\nexport type CustomItemComponent = React.ForwardRefExoticComponent<\n  React.PropsWithoutRef<CustomItemComponentProps> & React.RefAttributes<any>\n>;\n\ntype ListItemProps = {\n  _children: ReactNode;\n  _resizer: ListResizer;\n  _store: VirtualStore;\n  _index: number;\n  _element: \"div\";\n  _isHorizontal: boolean;\n  _isRtl: boolean;\n};\n\nexport const ListItem = memo(\n  ({\n    _children: children,\n    _resizer: resizer,\n    _store: store,\n    _index: index,\n    _element: Element,\n    _isHorizontal: isHorizontal,\n    _isRtl: isRtl,\n  }: ListItemProps): ReactElement => {\n    const ref = useRef<HTMLDivElement>(null);\n\n    const offset = useSelector(\n      store,\n      () => store._getItemOffset(index),\n      UPDATE_SIZE,\n      true\n    );\n    const hide = useSelector(\n      store,\n      () => store._isUnmeasuredItem(index),\n      UPDATE_SIZE,\n      true\n    );\n\n    // The index may be changed if elements are inserted to or removed from the start of props.children\n    useIsomorphicLayoutEffect(\n      () => resizer._observeItem(ref[refKey]!, index),\n      [index]\n    );\n\n    return (\n      <Element\n        ref={ref}\n        style={useMemo((): CSSProperties => {\n          const leftOrRightKey = isRtl ? \"right\" : \"left\";\n          const style: CSSProperties = {\n            margin: 0,\n            padding: 0,\n            position: \"absolute\",\n            [isHorizontal ? \"height\" : \"width\"]: \"100%\",\n            [isHorizontal ? \"top\" : leftOrRightKey]: 0,\n            [isHorizontal ? leftOrRightKey : \"top\"]: offset,\n            visibility: hide ? \"hidden\" : \"visible\",\n            // willChange: \"transform\",\n          };\n          if (isHorizontal) {\n            style.display = \"flex\";\n          }\n          return style;\n        }, [offset, hide])}\n      >\n        {children}\n      </Element>\n    );\n  }\n);\n","import {\n  useRef,\n  useMemo,\n  ReactElement,\n  forwardRef,\n  useImperativeHandle,\n  ReactNode,\n  useEffect,\n} from \"react\";\nimport {\n  UPDATE_SCROLL_WITH_EVENT,\n  ACTION_ITEMS_LENGTH_CHANGE,\n  createVirtualStore,\n  UPDATE_SIZE,\n  UPDATE_JUMP,\n  UPDATE_SCROLL_DIRECTION,\n  UPDATE_SCROLL,\n  SCROLL_IDLE,\n} from \"../core/store\";\nimport { useIsomorphicLayoutEffect } from \"./useIsomorphicLayoutEffect\";\nimport { useSelector } from \"./useSelector\";\nimport { exists, values } from \"../core/utils\";\nimport { createScroller } from \"../core/scroller\";\nimport {\n  MayHaveKey,\n  clampEndIndex,\n  clampStartIndex,\n  emptyComponents,\n  flattenChildren,\n  refKey,\n} from \"./utils\";\nimport { useStatic } from \"./useStatic\";\nimport { useLatestRef } from \"./useLatestRef\";\nimport { createResizer } from \"../core/resizer\";\nimport { ViewportComponentAttributes } from \"..\";\nimport {\n  CustomViewportComponent,\n  CustomViewportComponentProps,\n  Viewport as DefaultViewport,\n} from \"./Viewport\";\nimport { CustomItemComponent, ListItem } from \"./ListItem\";\nimport { CacheSnapshot, ScrollToIndexAlign } from \"../core/types\";\nimport { Cache } from \"../core/cache\";\nimport { flushSync } from \"react-dom\";\n\nexport type ScrollMode = \"reverse\" | \"rtl\";\n\ntype CustomItemComponentOrElement =\n  | keyof JSX.IntrinsicElements\n  | CustomItemComponent;\n\n/**\n * Methods of {@link VList}.\n */\nexport interface VListHandle {\n  /**\n   * Get current {@link CacheSnapshot}.\n   */\n  readonly cache: CacheSnapshot;\n  /**\n   * Get current scrollTop or scrollLeft.\n   */\n  readonly scrollOffset: number;\n  /**\n   * Get current scrollHeight or scrollWidth.\n   */\n  readonly scrollSize: number;\n  /**\n   * Get current offsetHeight or offsetWidth.\n   */\n  readonly viewportSize: number;\n  /**\n   * Scroll to the item specified by index.\n   * @param index index of item\n   * @param align alignment of item\n   */\n  scrollToIndex(index: number, align?: ScrollToIndexAlign): void;\n  /**\n   * Scroll to the given offset.\n   * @param offset offset from start\n   */\n  scrollTo(offset: number): void;\n  /**\n   * Scroll by the given offset.\n   * @param offset offset from current position\n   */\n  scrollBy(offset: number): void;\n}\n\n/**\n * Props of {@link VList}.\n */\nexport interface VListProps extends ViewportComponentAttributes {\n  /**\n   * Elements rendered by this component.\n   */\n  children: ReactNode;\n  /**\n   * Number of items to render above/below the visible bounds of the list. You can increase to avoid showing blank items in fast scrolling.\n   * @defaultValue 4\n   */\n  overscan?: number;\n  /**\n   * Item size hint for unmeasured items. It will help to reduce scroll jump when items are measured if used properly.\n   *\n   * - If not set, initial item sizes will be automatically estimated from measured sizes. This is recommended for most cases.\n   * - If set, you can opt out estimation and use the value as initial item size.\n   */\n  initialItemSize?: number;\n  /**\n   * If set, the specified amount of items will be mounted in the initial rendering regardless of the container size. This prop is mostly for SSR.\n   */\n  initialItemCount?: number;\n  /**\n   * While true is set, scroll position will be maintained from the end not usual start when items are shifted/unshifted. It is useful for reverse infinite scrolling.\n   */\n  shift?: boolean;\n  /**\n   * If true, rendered as a horizontally scrollable list. Otherwise rendered as a vertically scrollable list.\n   */\n  horizontal?: boolean;\n  /**\n   * Scroll modes that should be set in certain situations.\n   *\n   * - `reverse`: This mode will adjust some styles to be suitable for bottom-to-top scrolling.\n   * - `rtl`: You have to set this mode if you use this component under `direction: rtl` style.\n   */\n  mode?: ScrollMode;\n  /**\n   * You can restore cache by passing a {@link CacheSnapshot} on mount. This is useful when you want to restore scroll position after navigation. The snapshot can be obtained from {@link VListHandle.cache}.\n   */\n  cache?: CacheSnapshot;\n  /**\n   * Customized components for advanced usage.\n   */\n  components?: {\n    /**\n     * Component for scrollable element. This component will get {@link CustomViewportComponentProps} as props.\n     * @defaultValue {@link DefaultViewport}\n     */\n    Root?: CustomViewportComponent;\n    /**\n     * Component or element type for item element. This component will get {@link CustomItemComponentProps} as props.\n     * @defaultValue \"div\"\n     */\n    Item?: CustomItemComponentOrElement;\n  };\n  /**\n   * Callback invoked whenever scroll offset changes.\n   * @param offset Current scrollTop or scrollLeft.\n   */\n  onScroll?: (offset: number) => void;\n  /**\n   * Callback invoked when scrolling stops.\n   */\n  onScrollStop?: () => void;\n  /**\n   * Callback invoked when visible items range changes.\n   */\n  onRangeChange?: (\n    /**\n     * The start index of viewable items.\n     */\n    startIndex: number,\n    /**\n     * The end index of viewable items.\n     */\n    endIndex: number\n  ) => void;\n}\n\n/**\n * Virtualized list component. See {@link VListProps} and {@link VListHandle}.\n */\nexport const VList = forwardRef<VListHandle, VListProps>(\n  (\n    {\n      children,\n      overscan = 4,\n      initialItemSize,\n      initialItemCount,\n      shift,\n      horizontal: horizontalProp,\n      mode,\n      cache,\n      components: {\n        Root: Viewport = DefaultViewport,\n        Item: ItemElement = \"div\",\n      } = emptyComponents as {\n        Root?: undefined;\n        Item?: undefined;\n      },\n      onScroll: onScrollProp,\n      onScrollStop: onScrollStopProp,\n      onRangeChange: onRangeChangeProp,\n      ...viewportAttrs\n    },\n    ref\n  ): ReactElement => {\n    // Memoize element array\n    const elements = useMemo(() => flattenChildren(children), [children]);\n    const count = elements.length;\n\n    const onScroll = useLatestRef(onScrollProp);\n    const onScrollStop = useLatestRef(onScrollStopProp);\n\n    const [store, resizer, scroller, isHorizontal, isRtl] = useStatic(() => {\n      const _isHorizontal = !!horizontalProp;\n      const _isRtl = mode === \"rtl\";\n      const _store = createVirtualStore(\n        flushSync,\n        count,\n        initialItemSize,\n        initialItemCount,\n        cache as unknown as Cache | undefined,\n        mode === \"reverse\",\n        !initialItemSize\n      );\n      return [\n        _store,\n        createResizer(_store, _isHorizontal),\n        createScroller(_store, _isHorizontal, _isRtl),\n        _isHorizontal,\n        _isRtl,\n      ];\n    });\n\n    // The elements length and cached items length are different just after element is added/removed.\n    if (count !== store._getItemsLength()) {\n      store._update(ACTION_ITEMS_LENGTH_CHANGE, [count, shift]);\n    }\n\n    const [startIndex, endIndex] = useSelector(\n      store,\n      store._getRange,\n      UPDATE_SCROLL + UPDATE_SIZE\n    );\n    const scrollDirection = useSelector(\n      store,\n      store._getScrollDirection,\n      UPDATE_SCROLL_DIRECTION\n    );\n    const jumpCount = useSelector(store, store._getJumpCount, UPDATE_JUMP);\n    const scrollSize = useSelector(\n      store,\n      store._getCorrectedScrollSize,\n      UPDATE_SIZE,\n      true\n    );\n    const rootRef = useRef<HTMLDivElement>(null);\n    const scrolling = scrollDirection !== SCROLL_IDLE;\n\n    useIsomorphicLayoutEffect(() => {\n      const root = rootRef[refKey]!;\n      const unobserve = resizer._observeRoot(root);\n      const cleanup = scroller._initRoot(root);\n      const cleanupOnScroll = store._subscribe(UPDATE_SCROLL_WITH_EVENT, () => {\n        onScroll[refKey] && onScroll[refKey](store._getScrollOffset());\n      });\n      return () => {\n        unobserve();\n        cleanup();\n        cleanupOnScroll();\n      };\n    }, []);\n\n    useIsomorphicLayoutEffect(() => {\n      const jump = store._flushJump();\n      if (!jump) return;\n\n      scroller._fixScrollJump(jump);\n    }, [jumpCount]);\n\n    useEffect(() => {\n      if (!scrolling) {\n        onScrollStop[refKey] && onScrollStop[refKey]();\n      }\n    }, [scrolling]);\n\n    useEffect(() => {\n      if (!onRangeChangeProp) return;\n\n      onRangeChangeProp(startIndex, endIndex);\n    }, [startIndex, endIndex]);\n\n    useImperativeHandle(\n      ref,\n      () => {\n        return {\n          get cache() {\n            return store._getCache();\n          },\n          get scrollOffset() {\n            return store._getScrollOffset();\n          },\n          get scrollSize() {\n            return store._getCorrectedScrollSize();\n          },\n          get viewportSize() {\n            return store._getViewportSize();\n          },\n          scrollToIndex: scroller._scrollToIndex,\n          scrollTo: scroller._scrollTo,\n          scrollBy: scroller._scrollBy,\n        };\n      },\n      []\n    );\n\n    const overscanedStartIndex = clampStartIndex(\n      startIndex,\n      overscan,\n      scrollDirection\n    );\n    const overscanedEndIndex = clampEndIndex(\n      endIndex,\n      overscan,\n      scrollDirection,\n      count\n    );\n    const items = useMemo(() => {\n      const res: ReactElement[] = [];\n      for (let i = overscanedStartIndex; i <= overscanedEndIndex; i++) {\n        const e = elements[i]!;\n        const key = (e as MayHaveKey).key;\n        res.push(\n          <ListItem\n            key={exists(key) ? key : \"_\" + i}\n            _resizer={resizer}\n            _store={store}\n            _index={i}\n            _element={ItemElement as \"div\"}\n            _children={e}\n            _isHorizontal={isHorizontal}\n            _isRtl={isRtl}\n          />\n        );\n      }\n      return res;\n    }, [elements, overscanedStartIndex, overscanedEndIndex]);\n\n    return (\n      <Viewport\n        ref={rootRef}\n        width={isHorizontal ? scrollSize : undefined}\n        height={isHorizontal ? undefined : scrollSize}\n        scrolling={scrolling}\n        attrs={useMemo(\n          () => ({\n            ...viewportAttrs,\n            style: {\n              overflow: \"auto\",\n              display: isHorizontal ? \"inline-block\" : \"block\",\n              contain: \"strict\",\n              // transform: \"translate3d(0px, 0px, 0px)\",\n              // willChange: \"scroll-position\",\n              // backfaceVisibility: \"hidden\",\n              // https://github.com/bvaughn/react-window/issues/395\n              // willChange: \"transform\",\n              width: \"100%\",\n              height: \"100%\",\n              ...viewportAttrs.style,\n            },\n          }),\n          values(viewportAttrs)\n        )}\n      >\n        {items}\n      </Viewport>\n    );\n  }\n);\n","import {\n  memo,\n  useRef,\n  useMemo,\n  CSSProperties,\n  ReactElement,\n  forwardRef,\n  ReactNode,\n  useImperativeHandle,\n} from \"react\";\nimport {\n  ACTION_ITEMS_LENGTH_CHANGE,\n  UPDATE_SCROLL_DIRECTION,\n  UPDATE_JUMP,\n  UPDATE_SCROLL,\n  UPDATE_SIZE,\n  VirtualStore,\n  createVirtualStore,\n  SCROLL_IDLE,\n} from \"../core/store\";\nimport { useIsomorphicLayoutEffect } from \"./useIsomorphicLayoutEffect\";\nimport { useSelector } from \"./useSelector\";\nimport { values } from \"../core/utils\";\nimport { createScroller } from \"../core/scroller\";\nimport {\n  clampEndIndex,\n  clampStartIndex,\n  emptyComponents,\n  refKey,\n} from \"./utils\";\nimport { useStatic } from \"./useStatic\";\nimport {\n  CustomViewportComponent,\n  CustomViewportComponentProps,\n  ViewportComponentAttributes,\n} from \"..\";\nimport { createGridResizer, GridResizer } from \"../core/resizer\";\nimport { Viewport as DefaultViewport } from \"./Viewport\";\nimport { flushSync } from \"react-dom\";\n\nconst genKey = (i: number, j: number) => `${i}-${j}`;\n\n/**\n * Props of customized cell component for {@link VGrid}.\n */\nexport interface CustomCellComponentProps {\n  style: CSSProperties;\n  children: ReactNode;\n}\n\nexport type CustomCellComponent = React.ForwardRefExoticComponent<\n  React.PropsWithoutRef<CustomCellComponentProps> & React.RefAttributes<any>\n>;\n\ntype CustomCellComponentOrElement =\n  | keyof JSX.IntrinsicElements\n  | CustomCellComponent;\n\ntype CellProps = {\n  _children: ReactNode;\n  _resizer: GridResizer;\n  _vStore: VirtualStore;\n  _hStore: VirtualStore;\n  _rowIndex: number;\n  _colIndex: number;\n  _element: \"div\";\n  _isRtl: boolean;\n};\n\nconst Cell = memo(\n  ({\n    _children: children,\n    _resizer: resizer,\n    _vStore: vStore,\n    _hStore: hStore,\n    _rowIndex: rowIndex,\n    _colIndex: colIndex,\n    _element: Element,\n    _isRtl: isRtl,\n  }: CellProps): ReactElement => {\n    const ref = useRef<HTMLDivElement>(null);\n\n    const top = useSelector(\n      vStore,\n      () => vStore._getItemOffset(rowIndex),\n      UPDATE_SIZE,\n      true\n    );\n    const left = useSelector(\n      hStore,\n      () => hStore._getItemOffset(colIndex),\n      UPDATE_SIZE,\n      true\n    );\n    const vHide = useSelector(\n      vStore,\n      () => vStore._isUnmeasuredItem(rowIndex),\n      UPDATE_SIZE,\n      true\n    );\n    const hHide = useSelector(\n      hStore,\n      () => hStore._isUnmeasuredItem(colIndex),\n      UPDATE_SIZE,\n      true\n    );\n    const height = useSelector(\n      vStore,\n      () => vStore._getItemSize(rowIndex),\n      UPDATE_SIZE,\n      true\n    );\n    const width = useSelector(\n      hStore,\n      () => hStore._getItemSize(colIndex),\n      UPDATE_SIZE,\n      true\n    );\n\n    // The index may be changed if elements are inserted to or removed from the start of props.children\n    useIsomorphicLayoutEffect(\n      () => resizer._observeItem(ref[refKey]!, rowIndex, colIndex),\n      [colIndex, rowIndex]\n    );\n\n    return (\n      <Element\n        ref={ref}\n        style={useMemo((): CSSProperties => {\n          const style: CSSProperties = {\n            display: \"grid\",\n            margin: 0,\n            padding: 0,\n            position: \"absolute\",\n            top: top,\n            [isRtl ? \"right\" : \"left\"]: left,\n            visibility: vHide || hHide ? \"hidden\" : \"visible\",\n            minHeight: height,\n            minWidth: width,\n          };\n          return style;\n        }, [top, left, width, height, vHide, hHide])}\n      >\n        {children}\n      </Element>\n    );\n  }\n);\n\n/**\n * Methods of {@link VGrid}.\n */\nexport interface VGridHandle {\n  /**\n   * Get current scrollTop or scrollLeft.\n   */\n  readonly scrollOffset: [x: number, y: number];\n  /**\n   * Get current scrollHeight or scrollWidth.\n   */\n  readonly scrollSize: [width: number, height: number];\n  /**\n   * Get current offsetHeight or offsetWidth.\n   */\n  readonly viewportSize: [width: number, height: number];\n  /**\n   * Scroll to the item specified by index.\n   * @param indexX horizontal index of item\n   * @param indexY vertical index of item\n   */\n  scrollToIndex(indexX: number, indexY: number): void;\n  /**\n   * Scroll to the given offset.\n   * @param offsetX offset from left\n   * @param offsetY offset from top\n   */\n  scrollTo(offsetX: number, offsetY: number): void;\n  /**\n   * Scroll by the given offset.\n   * @param offsetX horizontal offset from current position\n   * @param offsetY vertical offset from current position\n   */\n  scrollBy(offsetX: number, offsetY: number): void;\n}\n\n/**\n * Props of {@link VGrid}.\n */\nexport interface VGridProps extends ViewportComponentAttributes {\n  /**\n   * A function to create elements rendered by this component.\n   */\n  children: (arg: {\n    /**\n     * row index of cell\n     */\n    rowIndex: number;\n    /**\n     * column index of cell\n     */\n    colIndex: number;\n  }) => ReactNode;\n  /**\n   * Total row length of grid.\n   */\n  row: number;\n  /**\n   * Total column length of grid.\n   */\n  col: number;\n  /**\n   * Cell height hint for unmeasured items. It's recommended to specify this prop if item sizes are fixed and known, or much larger than the defaultValue. It will help to reduce scroll jump when items are measured.\n   * @defaultValue 40\n   */\n  cellHeight?: number;\n  /**\n   * Cell width hint for unmeasured items. It's recommended to specify this prop if item sizes are fixed and known, or much larger than the defaultValue. It will help to reduce scroll jump when items are measured.\n   * @defaultValue 100\n   */\n  cellWidth?: number;\n  /**\n   * Number of items to render above/below the visible bounds of the grid. You can increase to avoid showing blank items in fast scrolling.\n   * @defaultValue 2\n   */\n  overscan?: number;\n  /**\n   * If set, the specified amount of rows will be mounted in the initial rendering regardless of the container size. This prop is mostly for SSR.\n   */\n  initialRowCount?: number;\n  /**\n   * If set, the specified amount of cols will be mounted in the initial rendering regardless of the container size. This prop is mostly for SSR.\n   */\n  initialColCount?: number;\n  /**\n   * You have to set true if you use this component under `direction: rtl` style.\n   */\n  rtl?: boolean;\n  /**\n   * Customized components for advanced usage.\n   */\n  components?: {\n    /**\n     * Component for scrollable element. This component will get {@link CustomViewportComponentProps} as props.\n     * @defaultValue {@link DefaultViewport}\n     */\n    Root?: CustomViewportComponent;\n    /**\n     * Component or element type for cell element. This component will get {@link CustomCellComponentProps} as props.\n     * @defaultValue \"div\"\n     */\n    Cell?: CustomCellComponentOrElement;\n  };\n}\n\n/**\n * Virtualized grid component. See {@link VGridProps} and {@link VGridHandle}.\n */\nexport const VGrid = forwardRef<VGridHandle, VGridProps>(\n  (\n    {\n      children,\n      row: rowCount,\n      col: colCount,\n      cellHeight = 40,\n      cellWidth = 100,\n      overscan = 2,\n      initialRowCount,\n      initialColCount,\n      rtl: rtlProp,\n      components: {\n        Root: Viewport = DefaultViewport,\n        Cell: ItemElement = \"div\",\n      } = emptyComponents as {\n        Root?: undefined;\n        Cell?: undefined;\n      },\n      ...viewportAttrs\n    },\n    ref\n  ): ReactElement => {\n    const [vStore, hStore, resizer, vScroller, hScroller, isRtl] = useStatic(\n      () => {\n        const _isRtl = !!rtlProp;\n        const _vs = createVirtualStore(\n          flushSync,\n          rowCount,\n          cellHeight,\n          initialRowCount\n        );\n        const _hs = createVirtualStore(\n          flushSync,\n          colCount,\n          cellWidth,\n          initialColCount\n        );\n        return [\n          _vs,\n          _hs,\n          createGridResizer(_vs, _hs),\n          createScroller(_vs, false, _isRtl),\n          createScroller(_hs, true, _isRtl),\n          _isRtl,\n        ];\n      }\n    );\n    // The elements length and cached items length are different just after element is added/removed.\n    if (rowCount !== vStore._getItemsLength()) {\n      vStore._update(ACTION_ITEMS_LENGTH_CHANGE, [rowCount]);\n    }\n    if (colCount !== hStore._getItemsLength()) {\n      hStore._update(ACTION_ITEMS_LENGTH_CHANGE, [colCount]);\n    }\n\n    const [startRowIndex, endRowIndex] = useSelector(\n      vStore,\n      vStore._getRange,\n      UPDATE_SCROLL + UPDATE_SIZE\n    );\n    const [startColIndex, endColIndex] = useSelector(\n      hStore,\n      hStore._getRange,\n      UPDATE_SCROLL + UPDATE_SIZE\n    );\n    const vScrollDirection = useSelector(\n      vStore,\n      vStore._getScrollDirection,\n      UPDATE_SCROLL_DIRECTION\n    );\n    const hScrollDirection = useSelector(\n      hStore,\n      hStore._getScrollDirection,\n      UPDATE_SCROLL_DIRECTION\n    );\n    const vJumpCount = useSelector(vStore, vStore._getJumpCount, UPDATE_JUMP);\n    const hJumpCount = useSelector(hStore, hStore._getJumpCount, UPDATE_JUMP);\n    const height = useSelector(\n      vStore,\n      vStore._getCorrectedScrollSize,\n      UPDATE_SIZE,\n      true\n    );\n    const width = useSelector(\n      hStore,\n      hStore._getCorrectedScrollSize,\n      UPDATE_SIZE,\n      true\n    );\n    const rootRef = useRef<HTMLDivElement>(null);\n    const vScrolling = vScrollDirection !== SCROLL_IDLE;\n    const hScrolling = hScrollDirection !== SCROLL_IDLE;\n\n    useIsomorphicLayoutEffect(() => {\n      const root = rootRef[refKey]!;\n      const unobserve = resizer._observeRoot(root);\n      const vCleanup = vScroller._initRoot(root);\n      const hCleanup = hScroller._initRoot(root);\n      return () => {\n        unobserve();\n        vCleanup();\n        hCleanup();\n      };\n    }, []);\n\n    useIsomorphicLayoutEffect(() => {\n      const jump = vStore._flushJump();\n      if (!jump) return;\n\n      vScroller._fixScrollJump(jump);\n    }, [vJumpCount]);\n    useIsomorphicLayoutEffect(() => {\n      const jump = hStore._flushJump();\n      if (!jump) return;\n\n      hScroller._fixScrollJump(jump);\n    }, [hJumpCount]);\n\n    useImperativeHandle(\n      ref,\n      () => {\n        return {\n          get scrollOffset(): [number, number] {\n            return [hStore._getScrollOffset(), vStore._getScrollOffset()];\n          },\n          get scrollSize(): [number, number] {\n            return [\n              hStore._getCorrectedScrollSize(),\n              vStore._getCorrectedScrollSize(),\n            ];\n          },\n          get viewportSize(): [number, number] {\n            return [hStore._getViewportSize(), vStore._getViewportSize()];\n          },\n          scrollToIndex(indexX, indexY) {\n            hScroller._scrollToIndex(indexX);\n            vScroller._scrollToIndex(indexY);\n          },\n          scrollTo(offsetX, offsetY) {\n            hScroller._scrollTo(offsetX);\n            vScroller._scrollTo(offsetY);\n          },\n          scrollBy(offsetX, offsetY) {\n            hScroller._scrollBy(offsetX);\n            vScroller._scrollBy(offsetY);\n          },\n        };\n      },\n      []\n    );\n\n    const render = useMemo(() => {\n      const cache = new Map<string, ReactNode>();\n      return (rowIndex: number, colIndex: number) => {\n        let e: ReactNode | undefined = cache.get(genKey(rowIndex, colIndex));\n        if (!e) {\n          cache.set(\n            genKey(rowIndex, colIndex),\n            (e = children({ rowIndex, colIndex }))\n          );\n        }\n        return e;\n      };\n    }, [children]);\n\n    const overscanedStartRowIndex = clampStartIndex(\n      startRowIndex,\n      overscan,\n      vScrollDirection\n    );\n    const overscanedEndRowIndex = clampEndIndex(\n      endRowIndex,\n      overscan,\n      vScrollDirection,\n      rowCount\n    );\n    const overscanedStartColIndex = clampStartIndex(\n      startColIndex,\n      overscan,\n      hScrollDirection\n    );\n    const overscanedEndColIndex = clampEndIndex(\n      endColIndex,\n      overscan,\n      hScrollDirection,\n      colCount\n    );\n\n    const items = useMemo(() => {\n      const res: ReactElement[] = [];\n      for (let i = overscanedStartRowIndex; i <= overscanedEndRowIndex; i++) {\n        for (let j = overscanedStartColIndex; j <= overscanedEndColIndex; j++) {\n          res.push(\n            <Cell\n              key={genKey(i, j)}\n              _resizer={resizer}\n              _vStore={vStore}\n              _hStore={hStore}\n              _rowIndex={i}\n              _colIndex={j}\n              _element={ItemElement as \"div\"}\n              _children={render(i, j)}\n              _isRtl={isRtl}\n            />\n          );\n        }\n      }\n\n      return res;\n    }, [\n      render,\n      overscanedStartRowIndex,\n      overscanedEndRowIndex,\n      overscanedStartColIndex,\n      overscanedEndColIndex,\n    ]);\n\n    return (\n      <Viewport\n        ref={rootRef}\n        width={width}\n        height={height}\n        scrolling={vScrolling || hScrolling}\n        attrs={useMemo(\n          () => ({\n            ...viewportAttrs,\n            style: {\n              overflow: \"auto\",\n              contain: \"strict\",\n              // transform: \"translate3d(0px, 0px, 0px)\",\n              // willChange: \"scroll-position\",\n              // backfaceVisibility: \"hidden\",\n              width: \"100%\",\n              height: \"100%\",\n              ...viewportAttrs.style,\n            },\n          }),\n          values(viewportAttrs)\n        )}\n      >\n        {items}\n      </Viewport>\n    );\n  }\n);\n","import {\n  useRef,\n  useMemo,\n  ReactElement,\n  ReactNode,\n  useEffect,\n  forwardRef,\n  useImperativeHandle,\n} from \"react\";\nimport {\n  ACTION_ITEMS_LENGTH_CHANGE,\n  UPDATE_SCROLL_DIRECTION,\n  UPDATE_JUMP,\n  UPDATE_SCROLL,\n  UPDATE_SIZE,\n  createVirtualStore,\n  SCROLL_IDLE,\n} from \"../core/store\";\nimport { useIsomorphicLayoutEffect } from \"./useIsomorphicLayoutEffect\";\nimport { useSelector } from \"./useSelector\";\nimport { exists, values } from \"../core/utils\";\nimport { createWindowScroller } from \"../core/scroller\";\nimport {\n  MayHaveKey,\n  clampEndIndex,\n  clampStartIndex,\n  emptyComponents,\n  flattenChildren,\n  refKey,\n} from \"./utils\";\nimport { useStatic } from \"./useStatic\";\nimport { useLatestRef } from \"./useLatestRef\";\nimport { createWindowResizer } from \"../core/resizer\";\nimport { CacheSnapshot, ViewportComponentAttributes } from \"..\";\nimport {\n  CustomViewportComponent,\n  CustomViewportComponentProps,\n  Viewport as DefaultViewport,\n} from \"./Viewport\";\nimport { CustomItemComponent, ListItem } from \"./ListItem\";\nimport { Cache } from \"../core/cache\";\nimport { flushSync } from \"react-dom\";\n\ntype CustomItemComponentOrElement =\n  | keyof JSX.IntrinsicElements\n  | CustomItemComponent;\n\n/**\n * Methods of {@link WVList}.\n */\nexport interface WVListHandle {\n  /**\n   * Get current {@link CacheSnapshot}.\n   */\n  readonly cache: CacheSnapshot;\n}\n\n/**\n * Props of {@link WVList}.\n */\nexport interface WVListProps extends ViewportComponentAttributes {\n  /**\n   * Elements rendered by this component.\n   */\n  children: ReactNode;\n  /**\n   * Number of items to render above/below the visible bounds of the list. You can increase to avoid showing blank items in fast scrolling.\n   * @defaultValue 4\n   */\n  overscan?: number;\n  /**\n   * Item size hint for unmeasured items. It will help to reduce scroll jump when items are measured if used properly.\n   *\n   * - If not set, initial item sizes will be automatically estimated from measured sizes. This is recommended for most cases.\n   * - If set, you can opt out estimation and use the value as initial item size.\n   */\n  initialItemSize?: number;\n  /**\n   * If set, the specified amount of items will be mounted in the initial rendering regardless of the container size. This prop is mostly for SSR.\n   */\n  initialItemCount?: number;\n  /**\n   * If true, rendered as a horizontally scrollable list. Otherwise rendered as a vertically scrollable list.\n   */\n  horizontal?: boolean;\n  /**\n   * You can restore cache by passing a {@link CacheSnapshot} on mount. This is useful when you want to restore scroll position after navigation. The snapshot can be obtained from {@link WVListHandle.cache}.\n   */\n  cache?: CacheSnapshot;\n  /**\n   * Customized components for advanced usage.\n   */\n  components?: {\n    /**\n     * Component for scrollable element. This component will get {@link CustomViewportComponentProps} as props.\n     * @defaultValue {@link DefaultViewport}\n     */\n    Root?: CustomViewportComponent;\n    /**\n     * Component or element type for item element. This component will get {@link CustomItemComponentProps} as props.\n     * @defaultValue \"div\"\n     */\n    Item?: CustomItemComponentOrElement;\n  };\n  /**\n   * Callback invoked when scrolling stops.\n   */\n  onScrollStop?: () => void;\n  /**\n   * Callback invoked when visible items range changes.\n   */\n  onRangeChange?: (\n    /**\n     * The start index of viewable items.\n     */\n    startIndex: number,\n    /**\n     * The end index of viewable items.\n     */\n    endIndex: number\n  ) => void;\n}\n\n/**\n * Virtualized list component controlled by the window scrolling. See {@link WVListProps} and {@link WVListHandle}.\n */\nexport const WVList = forwardRef<WVListHandle, WVListProps>(\n  (\n    {\n      children,\n      overscan = 4,\n      initialItemSize,\n      initialItemCount,\n      horizontal: horizontalProp,\n      cache,\n      components: {\n        Root: Viewport = DefaultViewport,\n        Item: ItemElement = \"div\",\n      } = emptyComponents as {\n        Root?: undefined;\n        Item?: undefined;\n      },\n      onScrollStop: onScrollStopProp,\n      onRangeChange: onRangeChangeProp,\n      ...viewportAttrs\n    },\n    ref\n  ): ReactElement => {\n    // Memoize element array\n    const elements = useMemo(() => flattenChildren(children), [children]);\n    const count = elements.length;\n\n    const onScrollStop = useLatestRef(onScrollStopProp);\n\n    const [store, resizer, scroller, isHorizontal] = useStatic(() => {\n      const _isHorizontal = !!horizontalProp;\n      const _store = createVirtualStore(\n        flushSync,\n        count,\n        initialItemSize,\n        initialItemCount,\n        cache as unknown as Cache | undefined,\n        false,\n        !initialItemSize\n      );\n\n      return [\n        _store,\n        createWindowResizer(_store, _isHorizontal),\n        createWindowScroller(_store, _isHorizontal),\n        _isHorizontal,\n      ];\n    });\n    // The elements length and cached items length are different just after element is added/removed.\n    if (count !== store._getItemsLength()) {\n      store._update(ACTION_ITEMS_LENGTH_CHANGE, [count]);\n    }\n\n    const [startIndex, endIndex] = useSelector(\n      store,\n      store._getRange,\n      UPDATE_SCROLL + UPDATE_SIZE\n    );\n    const scrollDirection = useSelector(\n      store,\n      store._getScrollDirection,\n      UPDATE_SCROLL_DIRECTION\n    );\n    const jumpCount = useSelector(store, store._getJumpCount, UPDATE_JUMP);\n    const scrollSize = useSelector(\n      store,\n      store._getCorrectedScrollSize,\n      UPDATE_SIZE,\n      true\n    );\n    const rootRef = useRef<HTMLDivElement>(null);\n    const scrolling = scrollDirection !== SCROLL_IDLE;\n\n    useIsomorphicLayoutEffect(() => {\n      const root = rootRef[refKey]!;\n      const unobserve = resizer._observeRoot(root);\n      const cleanup = scroller._initRoot(root);\n      return () => {\n        unobserve();\n        cleanup();\n      };\n    }, []);\n\n    useIsomorphicLayoutEffect(() => {\n      const jump = store._flushJump();\n      if (!jump) return;\n\n      scroller._fixScrollJump(jump);\n    }, [jumpCount]);\n\n    useEffect(() => {\n      if (!scrolling) {\n        onScrollStop[refKey] && onScrollStop[refKey]();\n      }\n    }, [scrolling]);\n\n    useEffect(() => {\n      if (!onRangeChangeProp) return;\n\n      onRangeChangeProp(startIndex, endIndex);\n    }, [startIndex, endIndex]);\n\n    useImperativeHandle(\n      ref,\n      () => {\n        return {\n          get cache() {\n            return store._getCache();\n          },\n        };\n      },\n      []\n    );\n\n    const overscanedStartIndex = clampStartIndex(\n      startIndex,\n      overscan,\n      scrollDirection\n    );\n    const overscanedEndIndex = clampEndIndex(\n      endIndex,\n      overscan,\n      scrollDirection,\n      count\n    );\n    const items = useMemo(() => {\n      const res: ReactElement[] = [];\n      for (let i = overscanedStartIndex; i <= overscanedEndIndex; i++) {\n        const e = elements[i]!;\n        const key = (e as MayHaveKey).key;\n        res.push(\n          <ListItem\n            key={exists(key) ? key : \"_\" + i}\n            _resizer={resizer}\n            _store={store}\n            _index={i}\n            _element={ItemElement as \"div\"}\n            _children={e}\n            _isHorizontal={isHorizontal}\n            _isRtl={false}\n          />\n        );\n      }\n      return res;\n    }, [elements, overscanedStartIndex, overscanedEndIndex]);\n\n    return (\n      <Viewport\n        ref={rootRef}\n        width={isHorizontal ? scrollSize : undefined}\n        height={isHorizontal ? undefined : scrollSize}\n        scrolling={scrolling}\n        attrs={useMemo(\n          () => ({\n            ...viewportAttrs,\n            style: {\n              display: isHorizontal ? \"inline-block\" : \"block\",\n              // transform: \"translate3d(0px, 0px, 0px)\",\n              // willChange: \"scroll-position\",\n              // backfaceVisibility: \"hidden\",\n              // https://github.com/bvaughn/react-window/issues/395\n              // willChange: \"transform\",\n              width: isHorizontal ? \"auto\" : \"100%\",\n              height: isHorizontal ? \"100%\" : \"auto\",\n              ...viewportAttrs.style,\n            },\n          }),\n          values(viewportAttrs)\n        )}\n      >\n        {items}\n      </Viewport>\n    );\n  }\n);\n"],"names":["min","Math","max","abs","now","Date","values","Object","isArray","Array","timeout","setTimeout","clamp","value","minValue","maxValue","exists","v","debounce","fn","ms","id","cancel","clearTimeout","debouncedFn","_cancel","once","called","cache","args","computeStyle","e","getComputedStyle","getStyleNumber","parseFloat","UNCACHED","getItemSize","index","size","_sizes","_defaultItemSize","computeOffset","_length","_computedOffsetIndex","_offsets","i","top","findIndex","offset","sum","next","computeRange","scrollOffset","prevStartIndex","viewportSize","start","appendCache","length","prepend","key","push","updateCacheLength","isShift","diff","isRemove","shift","splice","reduce","acc","removed","calculateJump","items","keepEnd","createVirtualStore","flushSync","elementsCount","itemSize","initialItemCount","initCache","isReverse","shouldAutoEstimateItemSize","jumpCount","jump","_scrollDirection","_isShifting","_isManualScrolling","_resized","_prevRange","subscribers","Set","getScrollSize","computeTotalSize","getScrollOffsetMax","clampScrollOffset","updateScrollDirection","dir","prev","_getCache","JSON","parse","stringify","_getRange","prevEndIndex","end","_isUnmeasuredItem","_hasUnmeasuredItemsInTargetViewport","startIndex","endIndex","hasUnmeasuredItemsInRange","slice","includes","_getItemOffset","computeStartOffset","_getItemSize","_getItemsLength","_getScrollOffset","_getScrollOffsetMax","_getScrollDirection","_getViewportSize","_getCorrectedScrollSize","_getJumpCount","_flushJump","prevJump","_subscribe","target","cb","sub","add","delete","_update","type","payload","shouldSync","mutated","updated","filter","isNewItemMeasured","forEach","setItemSize","isInitialMeasurement","measuredSizes","s","startItemSize","every","arr","sort","a","b","mid","median","estimateDefaultItemSize","distanceToEnd","UPDATE_SCROLL","delta","isJustResized","update","useIsomorphicLayoutEffect","window","useLayoutEffect","useEffect","refKey","emptyComponents","children","elements","c","flattenChildren","clampStartIndex","overscan","scrollDirection","clampEndIndex","count","useLatestRef","ref","useRef","useSelector","store","getSnapShot","shouldGetLatest","state","setState","useState","getter","snap","hasNegativeOffsetInRtl","scrollable","isNegative","createOnWheel","isHorizontal","onScrollStopped","throttle","time","n","ctrlKey","deltaX","deltaY","createScroller","isRtl","rootElement","scrollToQueue","scrollToKey","normalizeOffset","scrollManually","async","getTargetOffset","getOffset","targetOffset","unsubscribe","Promise","resolve","reject","resolved","resolveQueue","undefined","_initRoot","root","syncViewportToScrollPosition","onScroll","onWheel","addEventListener","passive","removeEventListener","_scrollTo","_scrollBy","_scrollToIndex","align","_fixScrollJump","createWindowScroller","offsetKey","visible","getOffsetToWindow","node","nodeOffset","parent","offsetParent","document","body","io","IntersectionObserver","entry","isIntersecting","observe","disconnect","scrollBy","useStatic","init","rootObserveOpts","box","createResizer","sizeKey","mountedIndexes","WeakMap","getResizeObserver","ResizeObserver","entries","resizes","contentRect","get","_observeRoot","ro","_observeItem","el","set","unobserve","createWindowResizer","windowSizeKey","createGridResizer","vStore","hStore","heightKey","widthKey","maybeCachedRowIndexes","maybeCachedColIndexes","sizeCache","Map","getKey","rowIndex","colIndex","resizedRows","resizedCols","style","paddingBottom","left","paddingRight","cell","prevSize","rowResized","colResized","heightResizes","maxHeight","widthResizes","maxWidth","Viewport","forwardRef","attrs","width","height","scrolling","_jsx","useMemo","position","visibility","pointerEvents","ListItem","memo","_children","_resizer","resizer","_store","_index","_element","Element","_isHorizontal","_isRtl","hide","leftOrRightKey","margin","padding","display","VList","initialItemSize","horizontal","horizontalProp","mode","components","Root","DefaultViewport","Item","ItemElement","onScrollProp","onScrollStop","onScrollStopProp","onRangeChange","onRangeChangeProp","viewportAttrs","scroller","scrollSize","rootRef","cleanup","cleanupOnScroll","useImperativeHandle","scrollToIndex","scrollTo","overscanedStartIndex","overscanedEndIndex","res","overflow","contain","genKey","j","Cell","_vStore","_hStore","_rowIndex","_colIndex","vHide","hHide","minHeight","minWidth","VGrid","row","rowCount","col","colCount","cellHeight","cellWidth","initialRowCount","initialColCount","rtl","rtlProp","vScroller","hScroller","_vs","_hs","startRowIndex","endRowIndex","startColIndex","endColIndex","vScrollDirection","hScrollDirection","vJumpCount","hJumpCount","vScrolling","hScrolling","vCleanup","hCleanup","indexX","indexY","offsetX","offsetY","render","overscanedStartRowIndex","overscanedEndRowIndex","overscanedStartColIndex","overscanedEndColIndex","WVList"],"mappings":"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"}